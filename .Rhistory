axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15))
## Example2
# 지느러미 길이와 체중에 대한 산점도 + 부리 길이(색상)
penguins %>%
drop_na() %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = bill_length_mm), size = 4, alpha = 0.7, pch = 19) +
scale_color_gradient(low = "#FFF59D", high = "#388E3C") +
labs(x = "Flipper Length (mm)", y = "Weight (g)", color = "Bill Length (mm)") +
theme_classic() +
theme(axis.title.x = element_text(size = 15, margin = margin(t=10)),
axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
## Example2
# 지느러미 길이와 체중에 대한 산점도 + 부리 길이(크기), 성별(색상)
penguins %>%
drop_na() %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, size = bill_length_mm), alpha = 0.5) +
labs(x = "Flipper Length (mm)", y = "Weight (g)", color = "Sex", size = "Bill Length (mm)") +
theme_classic() +
theme(axis.title.x = element_text(size = 15, margin = margin(t=10)),
axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15)) +
guides(color = guide_legend(override.aes = list(size = 6)))
## Example2
# 지느러미 길이와 체중에 대한 산점도 + 부리 길이(크기), 성별(색상)
penguins %>%
drop_na() %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, size = bill_length_mm), alpha = 0.5) +
labs(x = "Flipper Length (mm)", y = "Weight (g)", color = "Sex", size = "Bill Length (mm)") +
theme_classic() +
theme(axis.title.x = element_text(size = 15, margin = margin(t=10)),
axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15)) +
guides(color = guide_legend(override.aes = list(size = 3)))
## Example2
# 지느러미 길이와 체중에 대한 산점도 + 부리 길이(크기), 성별(색상)
penguins %>%
drop_na() %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, size = bill_length_mm), alpha = 0.5) +
labs(x = "Flipper Length (mm)", y = "Weight (g)", color = "Sex", size = "Bill Length (mm)") +
theme_classic() +
theme(axis.title.x = element_text(size = 15, margin = margin(t=10)),
axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15)) +
guides(color = guide_legend(override.aes = list(size = 3))) +
scale_size_continuous(breaks = c(35, 40, 45, 50))
penguins %>% summary
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line()
library(babynames)
install.packages("babynames")
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line()
library(babynames)
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line()
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line(size = 2) +
labs(x = "", y = "Weight (g)") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line(size = 2) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line(size = 1.2) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line(size = 1.2, color = "#66a182") +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
babynames %>%
group_by(year) %>%
summarise(prop_x = mean(str_detect(name, "x"))) %>%
ggplot(aes(year, prop_x)) +
geom_line(size = 1.2, color = "#66a182") +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder
install.packages("gapminder")
## Example 2
# 시간에 따른 대륙별 평균 수명의 중앙값 변화
library(gapminder)
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size=1) +
geom_point(size=1.5)
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2)
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3)
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_bw() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_gray() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_light() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_update() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
theme_gray() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Proportion of Names Containing \"x\"") +
#theme_gray() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
+
scale_color_brewer(palette = "Set1")
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_brewer(palette = "Set1")
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_viridis_c()
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_hue()
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_manual(values = wes_palette("Darjeeling1"))
install.packages("wesanderson")
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_manual(values = wes_palette("Darjeeling1"))
## Example 2
# 시간에 따른 대륙별 평균 수명의 중앙값 변화
library(gapminder)
library(wesanderson)
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Royal1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Royal1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("GrandBudapest1"))
# 시간에 따른 대륙별 평균 수명의 중앙값 변화
library(gapminder)
library(wesanderson)
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("GrandBudapest1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Cavalcanti1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3, pch = 21, fill = "white") +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 2) +
geom_point(size = 2, pch = 21, fill = "white") +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3, pch = 21, fill = "white") +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 3, pch = 21, fill = "white") +
labs(x = "", y = "Median Life Expectancy (years)") +
theme_classic() +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp = median(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line(size = 1) +
geom_point(size = 2.5) +
labs(x = "", y = "Median Life Expectancy (years)") +
theme(axis.title.y = element_text(size = 15, margin = margin(r=10)),
axis.text = element_text(size = 12),
legend.title = element_text(size = 15),
legend.text = element_text(size = 12)) +
#scale_color_brewer(palette = "Set1")
scale_color_manual(values = wes_palette("Darjeeling1"))
bookdown::render_book("index.Rmd", output_dir = "docs")
bookdown::render_book("index.Rmd", output_dir = "docs")
bookdown::render_book("index.Rmd", output_dir = "docs")
